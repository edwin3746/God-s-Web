[{"id": "933100", "regex": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* @rx (?:<\\?(?:[^x]|x[^m]|xm[^l]|xml[^\\s]|xml$|$)|<\\?php|\\[(?:/|\\x5c)?php\\]) ", "explanation": "This expression is used to detect potential PHP code injection attacks in web requests. \\n\\nThe regex expression consists of several parts: \\n- SecRule: This is a directive in ModSecurity, a web application firewall, that specifies a rule to be applied to incoming requests.\\n- REQUEST_COOKIES|!REQUEST_COOKIES/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/*: These are variables that represent different parts of the request that the rule should be applied to. In this case, it includes cookies, arguments, and XML data.\\n- @rx: This is a ModSecurity operator that specifies a regular expression to match against the selected variables.\\n- (?:<\\\\?(?:[^x]|x[^m]|xm[^l]|xml[^\\\\s]|xml$|$)|<\\\\?php|\\\\[(?:/|\\\\x5c)?php\\\\]): This is the regular expression itself, which matches common PHP opening tags, including short tags and the opening tag with a leading square bracket.\\n\\nFor example, if a request contains a PHP opening tag in a cookie or argument value, this rule would trigger and block the request."}]